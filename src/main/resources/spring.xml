<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="ru.codeunited.jms.spring ru.codeunited.jms.service"/>
    <context:property-placeholder location="classpath:wmq.properties" ignore-unresolvable="true"/>

    <!--
    Main idea:
        MQQueueConnectionFactory -> UserCredentialsConnectionFactoryAdapter -> ConnectionFactory
    -->

    <!-- WebSphere MQ Connection Factory -->

    <!-- Use this factory only in BINDING mode -->
    <bean id="mqBindingConnectionFactory" class="com.ibm.mq.jms.MQQueueConnectionFactory"
          p:hostName="${wmq.qmgr.host}"
          p:queueManager="${wmq.qmgr.name}"
          p:transportType="0"
          p:channel="${wmq.qmgr.channel}"
          p:CCSID="${wmq.qmgr.ccid}">
    </bean>

    <!-- Use this factory in CLIENT mode -->
    <bean id="mqClientConnectionFactory" class="com.ibm.mq.jms.MQQueueConnectionFactory"
          p:connectionNameList="${wmq.qmgr.hosts}"
          p:clientReconnectTimeout="${wmq.qmgr.clientReconnectTimeout}"
          p:queueManager="${wmq.qmgr.name}"
          p:transportType="1"
          p:CCSID="${wmq.qmgr.ccid}"
          p:channel="${wmq.qmgr.channel}">
        <property name="clientReconnectOptions">
            <util:constant static-field="com.ibm.msg.client.wmq.WMQConstants.WMQ_CLIENT_RECONNECT"/>
        </property>
    </bean>

    <!-- JMS Queue Connection Factory -->
    <bean id="jmsQueueConnectionFactorySecured"
          class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter"
          p:targetConnectionFactory-ref="mqClientConnectionFactory"
          p:username="${wmq.qmgr.username}"
          p:password="${wmq.qmgr.password}">
    </bean>
    <bean id="jmsQueueSingleConnectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory"
          p:targetConnectionFactory-ref="jmsQueueConnectionFactorySecured"
          p:reconnectOnException="true">
    </bean>

    <!-- don't use caching. It has some side effects. -->
    <!--<bean id="jmsQueueCachingConnectionFactorySecured"
          class="org.springframework.jms.connection.CachingConnectionFactory"
          p:targetConnectionFactory-ref="jmsQueueConnectionFactorySecured"
          p:sessionCacheSize="10">
    </bean>-->

    <!-- JMS Destination Resolver -->
    <bean id="jmsDestinationResolver" class="org.springframework.jms.support.destination.DynamicDestinationResolver"/>

    <!-- JMS Queue Template -->
    <bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate"
          p:connectionFactory-ref="jmsQueueSingleConnectionFactory"
          p:destinationResolver-ref="jmsDestinationResolver"
          p:receiveTimeout="10000">
    </bean>

    <!-- local transacted(TX) listener container -->
    <jms:listener-container
            container-type="default"
            connection-factory="jmsQueueSingleConnectionFactory"
            concurrency="3-5"
            acknowledge="transacted">
        <jms:listener destination="${queue.request.tx}" ref="MQMessageTXListener"/>
    </jms:listener-container>

    <!-- client acknowledge(ACK) listener container -->
    <jms:listener-container
            container-type="default"
            connection-factory="jmsQueueSingleConnectionFactory"
            concurrency="2"
            acknowledge="client">
        <jms:listener destination="${queue.request.ack}" ref="MQMessageACKListener"/>
    </jms:listener-container>


</beans>